language: python
group: travis_latest
dist: bionic
sudo: true

env:
    global:
        # prefix before commands - used for wine, there the prefix is "wine"
        - cPREFIX=""
        # command to launch python interpreter (its different on macOs, there we need python3)
        - cPYTHON="python"
        # command to launch pip (its different on macOs, there we need pip3)
        - cPIP="python -m pip"
        # switch off wine fix me messages
        - WINEDEBUG=fixme-all

        # PYTEST
        - PYTEST_DO_TESTS="True" 

        # FLAKE8 tests
        - DO_FLAKE8_TESTS="True"

        # MYPY tests
        - MYPY_DO_TESTS="True"
        - MYPY_OPTIONS="--follow-imports=normal --ignore-missing-imports --implicit-reexport --no-warn-unused-ignores --strict"
        - MYPYPATH="./cli_exit_tools/3rd_party_stubs"

        # coverage
        - DO_COVERAGE="True"
        - DO_COVERAGE_UPLOAD_CODECOV="True"
        - DO_COVERAGE_UPLOAD_CODE_CLIMATE="True"

        # package name
        - PACKAGE_NAME="cli_exit_tools"
        # the registered CLI Command
        - CLI_COMMAND="cli_exit_tools"
        # the source file for rst_include (rebuild rst file includes)
        - RST_INCLUDE_SOURCE="./.docs/README_template.rst"
        # the target file for rst_include (rebuild rst file includes)
        - RST_INCLUDE_TARGET="./README.rst"

        # secure environment variable
        - secure: "lli+xgHulgSkGk3TQ2TYFzidf06uVRAg+3489rAqLaHKElJ8eMZB/7iqKaqcNshOkHoDjb/AYvg/KAkFNJQlP94Nv3R91znhtRDUtEd+Qp/c4aub0EuZKr9xiMPk2DEIboJupcAElkPIEZ1dg8sSH4R54q3ZVVJkH70SlEf5OB6TUmjZYfp/QlVrMy9rLNBC1XmYUPaK9jWQ0VNBX88eKtQp5G3pK0Fw1PedWECKhuTVYKAJNgtRgkdB2VncoXp7jAbR7jkeUQ5I5TTbCI5ndcLhYcECOEP4iZ5gkSqOd9fIqblLAQxFvXMUAaY+d5esoB93cRub87aTKqPX8fI5h//1y5Fjy9xzdje5xvHWH+bUgcrCV1mC97fYQpwCW4ZepnKpGD5XW7A3VKfWvmWStVdcJiTDOpyQpdAqw4Ii2oUE/CHTgGSCmXqGfk8CmyqpWerF3b1PS7U5WUrni8gJTEXgPWyI6EDj+sSwbYuQaOdgu4NI0JGbHPoXqyTi4Yyfpuk/o3szTmCmG7VD9/Sm9NvA68rJssAVOWm4PS8h3GIGUfpZydf5A4Nrh+P9BS6OBwT6jC87Z5HQgS/YSdz+5Wxv55FF2NnT1zFDtTWmzQe89ZtmjX5PGCmDI4QqZ37CfDZVKyfZYn+3Hy6XrYo5qbPZDEZioScsHbsoLpCQaec="  # CC_TEST_REPORTER_ID.secret
        - secure: "rFQRs5kkRTuyJgY8ZmIuVhyUBnnUPG3KMcX838qJxAfA8PrVKgfJ3kC6OO5/5RhSmDHFEcEtFcWJSI4Y656p6HNO/a3FKTuVHz4lIiuvVWkDUDUw8EPCdutWRq1hdYqimSl3FY1hDgHuBJkX5/j5V5DpTx3nqUCV02HYRQYej8ShdGf54lLJbgtmDO0TqmbAO6iNGG+OeUWNLM/iFb8JQxZyV2WUVIb4qf7itEGNSTef41idmppfeest17lRQvuc4/Uqh9qgqyX0Z+XgBi4aTT65QSBHiFMXbHr8J3/ma6Gl5CM8cn0jfYLK0yqelN3/oTZsyBxdODIaRe15t0z3y9SnSk7r3aWBWCMV0ExZTUY2h6/yeXJUmHF6O/itu+yVOoIHTMnm3MisrQpTCCsLlTZxAbZ74sUhk42AOEH3wWVyvNICtR7CG5VTlxDmV9ARWUo4NOF6lFDm1GvAaiFbSinluCr4GluPgTxCPywqnCLTfnHU+RmaS2TJk+bUr35iiq72eONgH53izgw2j0/eSrV1VlxthotCgYo8bc8k7o6fq4x+9XNkojhbec5GFcIo5teLicbTTPphXJ1ABObRtsG2GzldWN0FKyND8sci0liTMA3i7BQymgl2HQgJK+2AT9wtmbgV0yDHvbgyH8N594ZHgIjeozveO1+RrIloimM="  # PYPI_PASSWORD.secret



addons:
    apt:
        packages:
            - xvfb      # install xvfb virtual framebuffer - this we need for WINE
            - winbind   # needed for WINE

services:   			# start services
  - xvfb    			# is needed for WINE on headless installation

matrix:
    include:

    - os: windows
      if: true
      language: sh
      name: "Windows Python 3.9"

      # oddly a secure password under env: global: causes that choco fails
      # so we need to put the option : filter_secrets: false
      # this can be a security issue, check that You dont leak secrets here !
      filter_secrets: false
      before_install:
          - git clone https://github.com/bitranox/lib_bash.git /usr/local/lib_bash
          - chmod -R 0755 /usr/local/lib_bash
          - chmod -R +x /usr/local/lib_bash/*.sh
          - /usr/local/lib_bash/lib_retry.sh retry choco install python3
          - export PATH="/c/Python310:/c/Python310/Scripts:/c/Python39:/c/Python39/Scripts:/c/Python38:/c/Python38/Scripts:$PATH"
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="False"
          - export DEPLOY_TEST="False"
          - export MYPY_DO_TESTS="True"


    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.6"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.7"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="False"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.9"
      before_install:
          - export BUILD_DOCS="True"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.9-dev"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "pypy3"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="False"

    - os: linux
      arch: "ppc64le"
      if: tag IS present
      language: python
      python: "3.9"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "s390x"
      if: tag IS present
      language: python
      python: "3.9"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "arm64"
      if: tag IS present
      language: python
      python: "3.9"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: osx
      if: true
      language: sh
      name: "macOS 10.15.7"
      python: "3.8"
      osx_image: xcode12.2
      env:
        # on osx pip and python points to python 2.7 - therefore we have to use pip3 and python3 here
        - cPREFIX=""				# prefix before commands - used for wine, there the prefix is "wine"
        - cPYTHON="python3"			# command to launch python interpreter (its different on macOs, there we need python3)
        - cPIP="python3 -m pip"   	# command to launch pip (its different on macOs, there we need pip3)
        - export BUILD_DOCS="False"
        - export DEPLOY_SDIST="False"
        - export DEPLOY_WHEEL="False"
        - export DEPLOY_TEST="True"
        - export MYPY_DO_TESTS="True"


install:
    - ${cPIP} install lib_travis
    - log_util --colortest
    - lib_travis install

script:
    - BRANCH=$(lib_travis get_branch)
    - log_util --level=NOTICE --banner "working on branch ${BRANCH}"
    - lib_travis script

after_success:
    - lib_travis after_success
    - lib_travis deploy
    - ls -l ./dist

notifications:
  email:
    recipients:
        - bitranox@gmail.com
    # on_success default: change
    on_success: never
    on_failure: always
